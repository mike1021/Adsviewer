{"version":3,"sources":["../../../client/components/util/util.service.js"],"names":["UtilService","$window","Util","safeCb","cb","angular","isFunction","noop","urlParse","url","a","document","createElement","href","host","isSameOrigin","origins","concat","map","push","location","filter","o","hostnameCheck","hostname","protocolCheck","protocol","portCheck","port","length","module","factory"],"mappings":"AAAA;;AAEA,CAAC,YAAW;;AAEV;;;AAGA,WAASA,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,QAAIC,OAAO;AACT;;;;;;AAMAC,YAPS,kBAOFC,EAPE,EAOE;AACT,eAAOC,QAAQC,UAAR,CAAmBF,EAAnB,IAAyBA,EAAzB,GAA8BC,QAAQE,IAA7C;AACD,OATQ;;;AAWT;;;;;;AAMAC,cAjBS,oBAiBAC,GAjBA,EAiBK;AACZ,YAAIC,IAAIC,SAASC,aAAT,CAAuB,GAAvB,CAAR;AACAF,UAAEG,IAAF,GAASJ,GAAT;;AAEA;AACA,YAAIC,EAAEI,IAAF,KAAW,EAAf,EAAmB;AACjBJ,YAAEG,IAAF,GAASH,EAAEG,IAAX;AACD;;AAED,eAAOH,CAAP;AACD,OA3BQ;;;AA6BT;;;;;;;AAOAK,kBApCS,wBAoCIN,GApCJ,EAoCSO,OApCT,EAoCkB;AACzBP,cAAMP,KAAKM,QAAL,CAAcC,GAAd,CAAN;AACAO,kBAAUA,WAAW,GAAGC,MAAH,CAAUD,OAAV,CAAX,IAAiC,EAA3C;AACAA,kBAAUA,QAAQE,GAAR,CAAYhB,KAAKM,QAAjB,CAAV;AACAQ,gBAAQG,IAAR,CAAalB,QAAQmB,QAArB;AACAJ,kBAAUA,QAAQK,MAAR,CAAe,UAASC,CAAT,EAAY;AACnC,cAAIC,gBAAgBd,IAAIe,QAAJ,KAAiBF,EAAEE,QAAvC;AACA,cAAIC,gBAAgBhB,IAAIiB,QAAJ,KAAiBJ,EAAEI,QAAvC;AACA;AACA;AACA;AACA;AACA,cAAIC,YAAYlB,IAAImB,IAAJ,KAAaN,EAAEM,IAAf,IAAuBN,EAAEM,IAAF,KAAW,EAAX,KAAkBnB,IAAImB,IAAJ,KAAa,IAAb,IAAqBnB,IAC3EmB,IAD2E,KAClE,KAD2B,CAAvC;AAEA,iBAAOL,iBAAiBE,aAAjB,IAAkCE,SAAzC;AACD,SAVS,CAAV;AAWA,eAAOX,QAAQa,MAAR,IAAkB,CAAzB;AACD;AArDQ,KAAX;;AAwDA,WAAO3B,IAAP;AACD;;AAEDG,UAAQyB,MAAR,CAAe,mBAAf,EACGC,OADH,CACW,MADX,EACmB/B,WADnB;AAED,CAnED","file":"util.service.js","sourcesContent":["'use strict';\n\n(function() {\n\n  /**\n   * The Util service is for thin, globally reusable, utility functions\n   */\n  function UtilService($window) {\n    var Util = {\n      /**\n       * Return a callback or noop function\n       *\n       * @param  {Function|*} cb - a 'potential' function\n       * @return {Function}\n       */\n      safeCb(cb) {\n        return angular.isFunction(cb) ? cb : angular.noop;\n      },\n\n      /**\n       * Parse a given url with the use of an anchor element\n       *\n       * @param  {String} url - the url to parse\n       * @return {Object}     - the parsed url, anchor element\n       */\n      urlParse(url) {\n        var a = document.createElement('a');\n        a.href = url;\n\n        // Special treatment for IE, see http://stackoverflow.com/a/13405933 for details\n        if (a.host === '') {\n          a.href = a.href;\n        }\n\n        return a;\n      },\n\n      /**\n       * Test whether or not a given url is same origin\n       *\n       * @param  {String}           url       - url to test\n       * @param  {String|String[]}  [origins] - additional origins to test against\n       * @return {Boolean}                    - true if url is same origin\n       */\n      isSameOrigin(url, origins) {\n        url = Util.urlParse(url);\n        origins = origins && [].concat(origins) || [];\n        origins = origins.map(Util.urlParse);\n        origins.push($window.location);\n        origins = origins.filter(function(o) {\n          let hostnameCheck = url.hostname === o.hostname;\n          let protocolCheck = url.protocol === o.protocol;\n          // 2nd part of the special treatment for IE fix (see above): \n          // This part is when using well-known ports 80 or 443 with IE,\n          // when $window.location.port==='' instead of the real port number.\n          // Probably the same cause as this IE bug: https://goo.gl/J9hRta\n          let portCheck = url.port === o.port || o.port === '' && (url.port === '80' || url\n            .port === '443');\n          return hostnameCheck && protocolCheck && portCheck;\n        });\n        return origins.length >= 1;\n      }\n    };\n\n    return Util;\n  }\n\n  angular.module('adsviewerApp.util')\n    .factory('Util', UtilService);\n})();\n"]}