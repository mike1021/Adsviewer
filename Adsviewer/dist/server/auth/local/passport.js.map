{"version":3,"sources":["../../../../server/auth/local/passport.js"],"names":["passport","require","LocalStrategy","Strategy","localAuthenticate","User","email","password","done","findOne","toLowerCase","exec","then","user","message","authenticate","authError","authenticated","catch","err","exports","setup","config","use","usernameField","passwordField"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAA9C;;AAGA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwD;AACtDH,OAAKI,OAAL,CAAa;AACXH,WAAOA,MAAMI,WAAN;AADI,GAAb,EAEGC,IAFH,GAGGC,IAHH,CAGQ,gBAAQ;AACZ,QAAI,CAACC,IAAL,EAAW;AACT,aAAOL,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBM,iBAAS;AADc,OAAlB,CAAP;AAGD;AACDD,SAAKE,YAAL,CAAkBR,QAAlB,EAA4B,UAASS,SAAT,EAAoBC,aAApB,EAAmC;AAC7D,UAAID,SAAJ,EAAe;AACb,eAAOR,KAAKQ,SAAL,CAAP;AACD;AACD,UAAI,CAACC,aAAL,EAAoB;AAClB,eAAOT,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEM,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAON,KAAK,IAAL,EAAWK,IAAX,CAAP;AACD;AACF,KATD;AAUD,GAnBH,EAoBGK,KApBH,CAoBS;AAAA,WAAOV,KAAKW,GAAL,CAAP;AAAA,GApBT;AAqBD;;AAEDC,QAAQC,KAAR,GAAgB,UAAShB,IAAT,EAAeiB,MAAf,EAAuB;AACrCtB,WAASuB,GAAT,CAAa,IAAIrB,aAAJ,CAAkB;AAC7BsB,mBAAe,OADc;AAE7BC,mBAAe,UAFc,CAEH;AAFG,GAAlB,EAGV,UAASnB,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AACjC,WAAOJ,kBAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,IAAzC,CAAP;AACD,GALY,CAAb;AAMD,CAPD","file":"passport.js","sourcesContent":["var passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\n\n\nfunction localAuthenticate(User, email, password, done) {\n  User.findOne({\n    email: email.toLowerCase()\n  }).exec()\n    .then(user => {\n      if (!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        });\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if (authError) {\n          return done(authError);\n        }\n        if (!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' });\n        } else {\n          return done(null, user);\n        }\n      });\n    })\n    .catch(err => done(err));\n}\n\nexports.setup = function(User, config) {\n  passport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password' // this is the virtual field on the model\n  }, function(email, password, done) {\n    return localAuthenticate(User, email, password, done);\n  }));\n}\n"]}