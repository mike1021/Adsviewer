{"version":3,"sources":["../../../../server/api/banner/index.spec.js"],"names":["proxyquire","require","noPreserveCache","bannerCtrlStub","index","show","create","update","destroy","routerStub","get","sinon","spy","put","patch","post","delete","bannerIndex","Router","describe","it","should","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,iBAAiB;AACnBC,SAAO,kBADY;AAEnBC,QAAM,iBAFa;AAGnBC,UAAQ,mBAHW;AAInBC,UAAQ,mBAJW;AAKnBC,WAAS;AALU,CAArB;;AAQA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,SAAOH,MAAMC,GAAN,EAHQ;AAIfG,QAAMJ,MAAMC,GAAN,EAJS;AAKfI,UAAQL,MAAMC,GAAN;AALO,CAAjB;;AAQA;AACA,IAAIK,cAAcjB,WAAW,YAAX,EAAyB;AACzC,aAAW;AACTkB,YAAQ,kBAAW;AACjB,aAAOT,UAAP;AACD;AAHQ,GAD8B;AAMzC,yBAAuBN;AANkB,CAAzB,CAAlB;;AASAgB,SAAS,oBAAT,EAA+B,YAAW;;AAExCC,KAAG,0CAAH,EAA+C,YAAW;AACxDH,gBAAYI,MAAZ,CAAmBC,KAAnB,CAAyBb,UAAzB;AACD,GAFD;;AAIAU,WAAS,kBAAT,EAA6B,YAAW;;AAEtCC,OAAG,yCAAH,EAA8C,YAAW;AACvDX,iBAAWC,GAAX,CACGa,QADH,CACY,GADZ,EACiB,kBADjB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUAP,WAAS,sBAAT,EAAiC,YAAW;;AAE1CC,OAAG,wCAAH,EAA6C,YAAW;AACtDX,iBAAWC,GAAX,CACGa,QADH,CACY,MADZ,EACoB,iBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUAP,WAAS,mBAAT,EAA8B,YAAW;;AAEvCC,OAAG,0CAAH,EAA+C,YAAW;AACxDX,iBAAWM,IAAX,CACGQ,QADH,CACY,GADZ,EACiB,mBADjB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUAP,WAAS,sBAAT,EAAiC,YAAW;;AAE1CC,OAAG,0CAAH,EAA+C,YAAW;AACxDX,iBAAWI,GAAX,CACGU,QADH,CACY,MADZ,EACoB,mBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUAP,WAAS,wBAAT,EAAmC,YAAW;;AAE5CC,OAAG,0CAAH,EAA+C,YAAW;AACxDX,iBAAWK,KAAX,CACGS,QADH,CACY,MADZ,EACoB,mBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUAP,WAAS,yBAAT,EAAoC,YAAW;;AAE7CC,OAAG,2CAAH,EAAgD,YAAW;AACzDX,iBAAWO,MAAX,CACGO,QADH,CACY,MADZ,EACoB,oBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar bannerCtrlStub = {\n  index: 'bannerCtrl.index',\n  show: 'bannerCtrl.show',\n  create: 'bannerCtrl.create',\n  update: 'bannerCtrl.update',\n  destroy: 'bannerCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar bannerIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './banner.controller': bannerCtrlStub\n});\n\ndescribe('Banner API Router:', function() {\n\n  it('should return an express router instance', function() {\n    bannerIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/banners', function() {\n\n    it('should route to banner.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'bannerCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/banners/:id', function() {\n\n    it('should route to banner.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'bannerCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/banners', function() {\n\n    it('should route to banner.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'bannerCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/banners/:id', function() {\n\n    it('should route to banner.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'bannerCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/banners/:id', function() {\n\n    it('should route to banner.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'bannerCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/banners/:id', function() {\n\n    it('should route to banner.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'bannerCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}