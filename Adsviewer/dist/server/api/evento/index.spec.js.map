{"version":3,"sources":["../../../../server/api/evento/index.spec.js"],"names":["proxyquire","require","noPreserveCache","eventoCtrlStub","index","show","create","update","destroy","routerStub","get","sinon","spy","put","patch","post","delete","eventoIndex","express","Router","describe","it","should","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,iBAAiB;AACnBC,SAAO,kBADY;AAEnBC,QAAM,iBAFa;AAGnBC,UAAQ,mBAHW;AAInBC,UAAQ,mBAJW;AAKnBC,WAAS;AALU,CAArB;;AAQA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,SAAOH,MAAMC,GAAN,EAHQ;AAIfG,QAAMJ,MAAMC,GAAN,EAJS;AAKfI,UAAQL,MAAMC,GAAN;AALO,CAAjB;;AAQA;AACA,IAAIK,cAAcjB,WAAW,YAAX,EAAyB;AACzCkB,WAAS;AACPC,UADO,oBACE;AACP,aAAOV,UAAP;AACD;AAHM,GADgC;AAMzC,yBAAuBN;AANkB,CAAzB,CAAlB;;AASAiB,SAAS,oBAAT,EAA+B,YAAW;AACxCC,KAAG,0CAAH,EAA+C,YAAW;AACxDJ,gBAAYK,MAAZ,CAAmBC,KAAnB,CAAyBd,UAAzB;AACD,GAFD;;AAIAW,WAAS,kBAAT,EAA6B,YAAW;AACtCC,OAAG,yCAAH,EAA8C,YAAW;AACvDZ,iBAAWC,GAAX,CACGc,QADH,CACY,GADZ,EACiB,kBADjB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;;AAQAP,WAAS,sBAAT,EAAiC,YAAW;AAC1CC,OAAG,wCAAH,EAA6C,YAAW;AACtDZ,iBAAWC,GAAX,CACGc,QADH,CACY,MADZ,EACoB,iBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;;AAQAP,WAAS,mBAAT,EAA8B,YAAW;AACvCC,OAAG,0CAAH,EAA+C,YAAW;AACxDZ,iBAAWM,IAAX,CACGS,QADH,CACY,GADZ,EACiB,mBADjB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;;AAQAP,WAAS,sBAAT,EAAiC,YAAW;AAC1CC,OAAG,0CAAH,EAA+C,YAAW;AACxDZ,iBAAWI,GAAX,CACGW,QADH,CACY,MADZ,EACoB,mBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;;AAQAP,WAAS,wBAAT,EAAmC,YAAW;AAC5CC,OAAG,0CAAH,EAA+C,YAAW;AACxDZ,iBAAWK,KAAX,CACGU,QADH,CACY,MADZ,EACoB,mBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;;AAQAP,WAAS,yBAAT,EAAoC,YAAW;AAC7CC,OAAG,2CAAH,EAAgD,YAAW;AACzDZ,iBAAWO,MAAX,CACGQ,QADH,CACY,MADZ,EACoB,oBADpB,EAEGF,MAFH,CAEUG,IAFV,CAEeC,IAFf,CAEoBC,UAFpB;AAGD,KAJD;AAKD,GAND;AAOD,CApDD","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar eventoCtrlStub = {\n  index: 'eventoCtrl.index',\n  show: 'eventoCtrl.show',\n  create: 'eventoCtrl.create',\n  update: 'eventoCtrl.update',\n  destroy: 'eventoCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar eventoIndex = proxyquire('./index.js', {\n  express: {\n    Router() {\n      return routerStub;\n    }\n  },\n  './evento.controller': eventoCtrlStub\n});\n\ndescribe('Evento API Router:', function() {\n  it('should return an express router instance', function() {\n    eventoIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/eventos', function() {\n    it('should route to evento.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'eventoCtrl.index')\n        .should.have.been.calledOnce;\n    });\n  });\n\n  describe('GET /api/eventos/:id', function() {\n    it('should route to evento.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'eventoCtrl.show')\n        .should.have.been.calledOnce;\n    });\n  });\n\n  describe('POST /api/eventos', function() {\n    it('should route to evento.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'eventoCtrl.create')\n        .should.have.been.calledOnce;\n    });\n  });\n\n  describe('PUT /api/eventos/:id', function() {\n    it('should route to evento.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'eventoCtrl.update')\n        .should.have.been.calledOnce;\n    });\n  });\n\n  describe('PATCH /api/eventos/:id', function() {\n    it('should route to evento.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'eventoCtrl.update')\n        .should.have.been.calledOnce;\n    });\n  });\n\n  describe('DELETE /api/eventos/:id', function() {\n    it('should route to evento.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'eventoCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n  });\n});\n"]}