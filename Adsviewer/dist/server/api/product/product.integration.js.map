{"version":3,"sources":["../../../../server/api/product/product.integration.js"],"names":["app","require","newProduct","describe","products","beforeEach","done","get","expect","end","err","res","body","it","should","be","instanceOf","Array","post","send","name","info","equal","product","_id","afterEach","updatedProduct","put","patchedProduct","patch","op","path","value","delete"],"mappings":"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","file":"product.integration.js","sourcesContent":["'use strict';\n\n/* globals describe, expect, it, beforeEach, afterEach */\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newProduct;\n\ndescribe('Product API:', function() {\n  describe('GET /api/products', function() {\n    var products;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/products')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if(err) {\n            return done(err);\n          }\n          products = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      products.should.be.instanceOf(Array);\n    });\n  });\n\n  describe('POST /api/products', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/products')\n        .send({\n          name: 'New Product',\n          info: 'This is the brand new product!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if(err) {\n            return done(err);\n          }\n          newProduct = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created product', function() {\n      newProduct.name.should.equal('New Product');\n      newProduct.info.should.equal('This is the brand new product!!!');\n    });\n  });\n\n  describe('GET /api/products/:id', function() {\n    var product;\n\n    beforeEach(function(done) {\n      request(app)\n        .get(`/api/products/${newProduct._id}`)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if(err) {\n            return done(err);\n          }\n          product = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      product = {};\n    });\n\n    it('should respond with the requested product', function() {\n      product.name.should.equal('New Product');\n      product.info.should.equal('This is the brand new product!!!');\n    });\n  });\n\n  describe('PUT /api/products/:id', function() {\n    var updatedProduct;\n\n    beforeEach(function(done) {\n      request(app)\n        .put(`/api/products/${newProduct._id}`)\n        .send({\n          name: 'Updated Product',\n          info: 'This is the updated product!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if(err) {\n            return done(err);\n          }\n          updatedProduct = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedProduct = {};\n    });\n\n    it('should respond with the updated product', function() {\n      updatedProduct.name.should.equal('Updated Product');\n      updatedProduct.info.should.equal('This is the updated product!!!');\n    });\n\n    it('should respond with the updated product on a subsequent GET', function(done) {\n      request(app)\n        .get(`/api/products/${newProduct._id}`)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if(err) {\n            return done(err);\n          }\n          let product = res.body;\n\n          product.name.should.equal('Updated Product');\n          product.info.should.equal('This is the updated product!!!');\n\n          done();\n        });\n    });\n  });\n\n  describe('PATCH /api/products/:id', function() {\n    var patchedProduct;\n\n    beforeEach(function(done) {\n      request(app)\n        .patch(`/api/products/${newProduct._id}`)\n        .send([\n          { op: 'replace', path: '/name', value: 'Patched Product' },\n          { op: 'replace', path: '/info', value: 'This is the patched product!!!' }\n        ])\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if(err) {\n            return done(err);\n          }\n          patchedProduct = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      patchedProduct = {};\n    });\n\n    it('should respond with the patched product', function() {\n      patchedProduct.name.should.equal('Patched Product');\n      patchedProduct.info.should.equal('This is the patched product!!!');\n    });\n  });\n\n  describe('DELETE /api/products/:id', function() {\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete(`/api/products/${newProduct._id}`)\n        .expect(204)\n        .end(err => {\n          if(err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when product does not exist', function(done) {\n      request(app)\n        .delete(`/api/products/${newProduct._id}`)\n        .expect(404)\n        .end(err => {\n          if(err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n  });\n});\n"]}