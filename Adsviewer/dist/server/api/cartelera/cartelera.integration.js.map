{"version":3,"sources":["../../../../server/api/cartelera/cartelera.integration.js"],"names":["app","require","newCartelera","describe","carteleras","beforeEach","done","get","expect","end","err","res","body","it","should","be","instanceOf","Array","post","send","name","info","equal","cartelera","_id","afterEach","updatedCartelera","put","delete"],"mappings":"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","file":"cartelera.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newCartelera;\n\ndescribe('Cartelera API:', function() {\n\n  describe('GET /api/carteleras', function() {\n    var carteleras;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/carteleras')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          carteleras = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      carteleras.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/carteleras', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/carteleras')\n        .send({\n          name: 'New carteleras',\n          info: 'This is the brand new ad!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newCartelera = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created ad', function() {\n      newCartelera.name.should.equal('New car');\n      newCartelera.info.should.equal('This is the brand new cartelera!!!');\n    });\n\n  });\n\n  describe('GET /api/carteleras/:id', function() {\n    var cartelera;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/carteleras/' + newCartelera._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          cartelera = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      cartelera = {};\n    });\n\n    it('should respond with the requested cartelera', function() {\n      cartelera.name.should.equal('New cartelera');\n      cartelera.info.should.equal('This is the brand new ad!!!');\n    });\n\n  });\n\n  describe('PUT /api/carteleras/:id', function() {\n    var updatedCartelera;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/carteleras/' + newCartelera._id)\n        .send({\n          name: 'Updated carteleras',\n          info: 'This is the updated ad!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedCartelera = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedCartelera = {};\n    });\n\n    it('should respond with the updated ad', function() {\n      updatedCartelera.name.should.equal('Updated ad');\n      updatedCartelera.info.should.equal('This is the updated ad!!!');\n    });\n\n  });\n\n  describe('DELETE /api/carteleras/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/carteleras/' + newCartelera._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when ad does not exist', function(done) {\n      request(app)\n        .delete('/api/carteleras/' + newCartelera._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});"]}